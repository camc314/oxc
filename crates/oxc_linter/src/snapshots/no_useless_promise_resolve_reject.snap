---
source: crates/oxc_linter/src/tester.rs
expression: no_useless_promise_resolve_reject
---
  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:3:1]
 3 â”‚                 if (foo > 4) {
 4 â”‚                     return Promise.reject(new Error('ðŸ¤ª'));
   Â·                            â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 5 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:5:1]
 5 â”‚                 }
 6 â”‚                 return Promise.resolve(result);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 7 â”‚             };
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.resolve(bar);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async () => {
 3 â”‚                 return Promise.resolve(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             };
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async function foo() {
 3 â”‚                 return Promise.resolve(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             (async function() {
 3 â”‚                 return Promise.resolve(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             });
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async function * foo() {
 3 â”‚                 return Promise.resolve(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             (async function*() {
 3 â”‚                 return Promise.resolve(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             });
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.reject(bar);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async () => {
 3 â”‚                 return Promise.reject(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             };
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async function foo() {
 3 â”‚                 return Promise.reject(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             }   
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             (async function() {
 3 â”‚                 return Promise.reject(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             });
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async function * foo() {
 3 â”‚                 return Promise.reject(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             (async function*() {
 3 â”‚                 return Promise.reject(bar);
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             });
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `yield value` over `yield Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 async function * foo() {
 3 â”‚                     yield Promise.resolve(bar);
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `yield value` over `yield Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 (async function * () {
 3 â”‚                     yield Promise.resolve(bar);
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 });
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `yield Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 async function * foo() {
 3 â”‚                     yield Promise.reject(bar);
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `yield Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 (async function * () {
 3 â”‚                     yield Promise.reject(bar);
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 });
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.resolve();
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 async function foo() {
 3 â”‚                     return Promise.resolve();
   Â·                            â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.reject();
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 async function foo() {
 3 â”‚                     return Promise.reject();
   Â·                            â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `yield value` over `yield Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 async function * foo() {
 3 â”‚                     yield Promise.resolve();
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.resolve(bar, baz);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.reject(bar, baz);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `yield value` over `yield Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚                 async function * foo() {
 3 â”‚                     yield Promise.resolve((bar, baz));
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚                 }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.resolve((bar, baz))
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.resolve({})
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:3:1]
 3 â”‚                     try {
 4 â”‚                         return Promise.resolve(1);
   Â·                                â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 5 â”‚                     } catch {}
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:3:1]
 3 â”‚                     try {
 4 â”‚                         return Promise.reject(1);
   Â·                                â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 5 â”‚                     } catch {}
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.resolve(...bar);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => Promise.reject(...bar);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  Ã— Invalid Character `
  â”‚ `
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ #
   Â·  â”€
 2 â”‚         async function * foo() {
 3 â”‚             const baz = yield Promise.resolve(bar);
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `yield Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚         async function * foo() {
 3 â”‚             const baz = yield Promise.reject(bar);
   Â·                               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => (Promise.resolve(bar));
   Â·              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => (Promise.reject(bar));
   Â·              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ async () => ((Promise.reject(bar)));
   Â·               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `yield Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async function * foo() {
 3 â”‚                 (yield Promise.reject(bar));
   Â·                        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `yield Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:2:1]
 2 â”‚             async function * foo() {
 3 â”‚                 ((yield Promise.reject(bar)));
   Â·                         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚             }
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => Promise.resolve(bar))
   Â·                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => { return Promise.resolve(bar); })
   Â·                             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(async () => Promise.reject(bar))
   Â·                          â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(async () => { return Promise.reject(bar); })
   Â·                                   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.catch(() => Promise.resolve(bar))
   Â·                     â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.catch(() => { return Promise.resolve(bar); })
   Â·                              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.catch(async () => Promise.reject(bar))
   Â·                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.catch(async () => { return Promise.reject(bar); })
   Â·                                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.finally(() => Promise.resolve(bar))
   Â·                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.finally(() => { return Promise.resolve(bar); })
   Â·                                â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.finally(async () => Promise.reject(bar))
   Â·                             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.finally(async () => { return Promise.reject(bar); })
   Â·                                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => {}, () => Promise.resolve(bar))
   Â·                              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => Promise.resolve(bar), () => Promise.resolve(baz))
   Â·                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => Promise.resolve(bar), () => Promise.resolve(baz))
   Â·                                                â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `return value` over `return Promise.resolve(value)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => {}, () => { return Promise.resolve(bar); })
   Â·                                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => {}, async () => Promise.reject(bar))
   Â·                                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€

  âš  eslint-plugin-unicorn(no-useless-promise-resolve-reject): Prefer `throw error` over `return Promise.reject(error)`.
   â•­â”€[no_useless_promise_resolve_reject.tsx:1:1]
 1 â”‚ promise.then(() => {}, async () => { return Promise.reject(bar); })
   Â·                                             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€


